os:
  - linux
  - osx
  - windows
dist: xenial
sudo: false

language: c

# Add Ubuntu deps
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - clang-3.9
      - libsdl2-dev
      - libcmocka-dev
      - doxygen
  homebrew:
    update: true
    packages:
      - sdl2
      - cmocka
      - cmake
      - doxygen

env: REMOVE=1

matrix:
  include:
    - os: osx
      compiler: clang
      env:
        - CONFIG=Release
        - 'CMAKE_OPTS=("-G" "Unix Makefiles")'

    - os: linux
      compiler: clang-3.9
      env:
        - CONFIG=Release
        - 'CMAKE_OPTS=("-G" "Unix Makefiles")'

    - os: linux
      compiler: gcc-8
      env:
        - CONFIG=Release
        - 'CMAKE_OPTS=("-G" "Unix Makefiles")'

   - os: windows
     compiler: gcc
     env:
       - CONFIG=Release
       - 'CMAKE_OPTS=("-G" "MinGW Makefiles" "-DCMAKE_SH=CMAKE_SH-NOTFOUND")'
  exclude:
    env: REMOVE=1

before_install:
  - bash --version

# installing dependencies and setting up environment
install:
  - if [[ $TRAVIS_OS_NAME = osx ]]; then
      export CMAKE=cmake;
      export CTEST=ctest;
      export CPACK=cpack;
    fi
  - if [[ $TRAVIS_OS_NAME = linux ]]; then
      mkdir /tmp/cmake/ || exit 1;
      pushd /tmp/cmake/ || exit 1;
      echo "Installing CMake 3.13";
      wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3-Linux-x86_64.tar.gz;
      tar -xzf cmake-3.13.3-Linux-x86_64.tar.gz cmake-3.13.3-Linux-x86_64/;
      export CMAKE=/tmp/cmake/cmake-3.13.3-Linux-x86_64/bin/cmake;
      export CTEST=/tmp/cmake/cmake-3.13.3-Linux-x86_64/bin/ctest;
      export CPACK=/tmp/cmake/cmake-3.13.3-Linux-x86_64/bin/cpack;
      popd || exit 1;
    fi
  - if [[ $TRAVIS_OS_NAME = windows ]]; then
      . ./dev/ci_win_deps.sh
    fi

script:
  - echo "Starting build process"
  - uname -a
  - $CMAKE --version
  - $CC --version
  - mkdir build && cd build
  - $CMAKE .. -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_TESTING=ON "${CMAKE_OPTS[@]}"
  - $CMAKE --build . --parallel
  - $CTEST --output-on-failure
  - $CMAKE --build . --target docs --parallel
  - $CMAKE --build . --target ldoc --parallel
