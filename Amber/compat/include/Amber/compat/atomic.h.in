
#ifndef AMBER_COMPAT_ATOMIC_H
#define AMBER_COMPAT_ATOMIC_H

#cmakedefine HAS_STDATOMIC_H
#ifdef HAS_STDATOMIC_H
# include <stdatomic.h>
#else
# include <Amber/compat/compat.h>
# include <Amber/compat/stdbool.h>
# include <SDL_atomic.h>

typedef SDL_atomic_t atomic_int;
static inline int atomic_load(atomic_int *n) {
    return SDL_AtomicGet(n);
}
static inline void atomic_store(atomic_int *n, int val) {
    SDL_AtomicSet(n, val);
}
static inline void atomic_init(atomic_int *n, int val) {
    n->value = val;
}
static inline bool atomic_compare_exchange_weak(atomic_int *n, int *oldval, int newval) {
    int old = SDL_AtomicGet(n);
    if (old == *oldval) {
        SDL_AtomicSet(n, newval);
        return true;
    } else {
        *oldval = old;
        return false;
    }
}
#endif



#endif /* AMBER_COMPAT_ATOMIC_H */
